# Bug Category: SQL injection

# The logic of the case02.php is: 
# 1. in line 11, the id parameter is being searched for in the GET request, this will then be saved into the $id variable
# 2. in line 14, the data from $id will be immediately put into the SQL query without sanitisation.
# 3. our input will go after WHERE id = '".$id."'";

# Exploit: 
# Since we can tell that there is no sanitisation function for the user input, the value that we put into the id parameter will directly be in the SQL query. Hence we can close the ' in our input. Then use an SQL keyword OR and then close the other ' at the back with any value. This will end up creating WHERE id = '"' OR ' 1"' which will always return TRUE. This means that the entire table will be printed out, showing the flag.

#!/bin/bash
python exploit02.py